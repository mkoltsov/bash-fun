500  cat /etc/shells
  501  cat /etc/passwd
  502  cat /etc/passwd | grep bash
  503  zsh
  504  echo $-
  505  echo $HISTFILE
  506  tail -n 10 $HISTFILE
  507  dirs
  508  popd
  509  cd ..
  510  dirs
  511  popd
  512  pushd
  513  pushd /
  514  popd
  515  dirs
  bash -x script.sh
  
set -x      # activate debugging from here
w
set +x      # stop debugging from here
which -a script_name
whereis script_name
locate script_name
If you don't want to start a new shell but execute the script in the current shell, you source it:
source script_name.sh
source = .
The Bash source built-in is a synonym for the Bourne shell . (dot) command.
The script does not need execute permission in this case. Commands are executed in the current shell context,
so any changes made to your environment will be visible when the script finishes execution:
